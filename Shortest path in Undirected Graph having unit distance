Q Link: https://practice.geeksforgeeks.org/problems/shortest-path-in-undirected-graph-having-unit-distance/1

..............................................................................................................................................

 vector<int> shortestPath(vector<vector<int>>& edges, int N,int M, int src){
       
        vector<int> adj[N]; 
        for(auto it : edges){
            adj[it[0]].push_back(it[1]);
            adj[it[1]].push_back(it[0]);
        }
        
        int dis[N];
        
        for(int i = 0; i< N ; i++){
            dis[i] = 1e9;
        }
        
        queue<int> q;
        
        dis[src] = 0; 
        
        q.push(src);
        while(!q.empty()){
            int node = q.front(); 
            q.pop(); 
            for(auto t : adj[node]){
                if(dis[node] + 1 < dis[t]){
                    dis[t] = dis[node] + 1;
                    q.push(t);
                }
            }
        }
        vector<int> ans(N, -1); 
        for(int i = 0; i< N ; i++){
            if(dis[i] != 1e9){
                ans[i] = dis[i];
            }
        }
        return ans;
    }
};
