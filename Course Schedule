Q Link: https://practice.geeksforgeeks.org/problems/course-schedule/1

....................................................................................................................................................

vector<int> findOrder(int n, int m, vector<vector<int>> prerequisites) 
    {
        //code here
        
        vector<int>adj[n];


        for(auto i: prerequisites)
        {
            adj[i[1]].push_back(i[0]);
        }
        vector<int>topo;
        
        vector<int>indegree(n,0);
        
        for(int i=0;i<n;i++)
        {
            for(auto it:adj[i])
            {
                indegree[it]++;
            }
        }
        
        queue<int>q;
        
             for(int i=0;i<n;i++)
        {
            if(indegree[i]==0)
            {
             q.push(i);   
            }
        }
        
        while(!q.empty())
        {
            int node = q.front();
            q.pop();
            topo.push_back(node);
            
            for(auto it: adj[node])
            {
                indegree[it]--;
                if(indegree[it]==0)
                {
                    q.push(it);
                }
            }
        }
        
        if(n==topo.size())
        {
            return topo;
        }
        return {};
    }
};
